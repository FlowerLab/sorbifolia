name: Test
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-linux:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Get Go cache paths
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        with:
          key: golangci-lint-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: golangci-lint-${{ runner.os }}-go-
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}

      - run: go version
      - run: go test -v $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values("./" + . + "/...")[]')
      - run: go test -v -race -cover -coverprofile=coverage.txt $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values("./" + . + "/...")[]')
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.os }},go-${{ matrix.go-version }}

  test-windows:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Get Go cache paths
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        with:
          key: golangci-lint-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: golangci-lint-${{ runner.os }}-go-
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}

      - run: go version
      - run: go test -v $(go work edit -json | jq -c -r "[.Use[].DiskPath | select(. != \""gorm-datatype\"")]  | map_values(\""./\"" + . + \""/...\"")[]")
      - run: go test -v -race -cover -coverprofile="coverage.txt" $(go work edit -json | jq -c -r "[.Use[].DiskPath | select(. != \""gorm-datatype\"")]  | map_values(\""./\"" + . + \""/...\"")[]")
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.os }},go-${{ matrix.go-version }}

  test-macos:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Get Go cache paths
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        with:
          key: golangci-lint-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: golangci-lint-${{ runner.os }}-go-
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}

      - run: go version
      - run: go test -v $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. !="gorm-datatype")] | map_values("./" + . + "/...")[]')
      - run: go test -v -race -cover -coverprofile=coverage.txt $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. !="gorm-datatype")] | map_values("./" + . + "/...")[]')
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.os }},go-${{ matrix.go-version }}