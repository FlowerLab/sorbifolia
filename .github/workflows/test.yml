name: Test
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-linux:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
          cache: true
          cache-dependency-path: go.work.sum

      - run: go version
      - run: go test $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. != "gomod")] | map_values("./" + . + "/...")[]')
      - run: go test -race -cover -coverprofile=coverage.txt $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. != "gomod")] | map_values("./" + . + "/...")[]')
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          gcov_ignore: gorm-pure-sqlite

  test-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
          cache: true
          cache-dependency-path: go.work.sum

      - run: go version
      - run: go test $(go work edit -json | jq -c -r "[.Use[].DiskPath | select(. != \""gorm-datatype\"") | select(. != \""gomod\"")]  | map_values(\""./\"" + . + \""/...\"")[]")
      - run: go test -race -cover -coverprofile="coverage.txt" $(go work edit -json | jq -c -r "[.Use[].DiskPath | select(. != \""gorm-datatype\"") | select(. != \""gomod\"")]  | map_values(\""./\"" + . + \""/...\"")[]")
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          gcov_ignore: gorm-pure-sqlite

  test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
          cache: true
          cache-dependency-path: go.work.sum

      - run: go version
      - run: go test $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. !="gorm-datatype") | select(. !="gomod")] | map_values("./" + . + "/...")[]')
      - run: go test -race -cover -coverprofile=coverage.txt $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. !="gorm-datatype") | select(. !="gomod")] | map_values("./" + . + "/...")[]')
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          gcov_ignore: gorm-pure-sqlite